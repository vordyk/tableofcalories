import React, {useEffect} from 'react';
import classes from './MainPage.module.css';
import TabSection from "../TabSection/TabSection";
import alertify from 'alertifyjs';

console.log(localStorage.getItem('token'));

const MainPage = () => {
    const getFormattedDate = () => {
        const options = { weekday: "long", day: "2-digit", month: "2-digit" };
        return new Date().toLocaleDateString("ru-RU", options);
    };

    const [data, setData] = React.useState(null);

    useEffect(
         () => {


            const fetchData = async () => {
                const token = localStorage.getItem('token');
                if (!token) {
                    alertify.error('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.');
                    return;
                }

                try {
                    const response = await fetch(`http://localhost:4000/nutrients/${token}`, {
                        headers: {'Content-Type': 'application/json'}
                    });

                    if (!response.ok) {
                        throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                    }

                    const result = await response.json();
                    setData(result);
                    console.log(result);
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞:', error);
                    alertify.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
                }
            }
             fetchData();
         }
            , []);

    const carb = 100;
    const prot = 100;
    const fat = 50;
    const fiber = 10;

    console.log(data.calories)

    const carbGoal = data.carbs;
    const protGoal = data.proteins;
    const fatGoal = data.fats;
    const fiberGoal = data.fiber;

    const addMeal = (id) => {
        switch (id) {
            case 'bf':
                console.log(id);
                break;
                case 'dn':
                    console.log(id);
                    break;
                    case 'lch':
                        console.log(id);
                        break;
        }
    }

    return (
        <>
        <div className={classes.container}>
            <header className={classes.header}>
                <h1>–ö–∞–ª–µ–Ω–¥–∞—Ä—å –ø–æ–¥—Å—á–µ—Ç–∞ –∫–∞–ª–æ—Ä–∏–π</h1>
                <p>{getFormattedDate()}</p>
            </header>

            <main className={classes.main}>
                <section className={classes.tracker}>
                    <div className={classes.summary}>
                        <h2>–ü—Ä–∏–µ–º: <span>0 –∫–∫–∞–ª</span></h2>
                        <h2>–†–∞—Å—Ö–æ–¥: <span>300 –∫–∫–∞–ª</span></h2>
                    </div>
                    <div className={classes.meals}>
                        <div className={classes.meal}><span className={classes.icon}>üç≥<span className={classes.add} id="bf" onClick={(e) => addMeal(e.currentTarget.id)}>‚ûï</span></span> –ó–∞–≤—Ç—Ä–∞–∫ <span>0 –∫–∫–∞–ª</span></div>
                        <div className={classes.meal}><span className={classes.icon}>üçõ<span className={classes.add} id="lch" onClick={(e) => addMeal(e.currentTarget.id)}>‚ûï</span></span> –û–±–µ–¥ <span>0 –∫–∫–∞–ª</span></div>
                        <div className={classes.meal}><span className={classes.icon}>ü•ó<span className={classes.add} id="dn" onClick={(e) => addMeal(e.currentTarget.id)}>‚ûï</span></span> –£–∂–∏–Ω <span>0 –∫–∫–∞–ª</span></div>
                    </div>
                </section>

                <section className={classes.nutrients}>
                    <h3>–ü–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞: </h3>
                    <br/>
                    <ul className={classes.list}>
                        <li className={classes.item}>–ë–µ–ª–∫–∏: <span>{prot}–≥ /{protGoal}–≥</span></li>
                        <li className={classes.item}>–£–≥–ª–µ–≤–æ–¥—ã: <span>{carb}–≥ /{carbGoal}–≥</span></li>
                        <li className={classes.item}>–ñ–∏—Ä—ã: <span>{fat}–≥ /{fatGoal}–≥</span></li>
                        <li className={classes.item}>–ö–ª–µ—Ç—á–∞—Ç–∫–∞: <span>{fiber}–≥ /{fiberGoal}–≥</span></li>
                    </ul>
                </section>
            </main>
        </div>
            <TabSection/>
        </>
    );
};

export default MainPage;